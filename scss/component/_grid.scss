
/* ============================================= */
/*              Grid System                      */
/* ============================================= */

body{
  background-color: rgb(242,242,242);

  
}

.mainGrid{
  display: grid;
  grid-template-columns: repeat(8, minMax(10px, 1fr));
  grid-template-rows: repeat(8, minMax(10px, 1fr));
  border: solid 5px black;
}

.mainGrid >div::before {
  
  content:"";
  padding-bottom: 100%;
  display: block;

}

//Nested grids

.mainGrid > div{
  display: grid;
 
}


 .mainGrid > div > *{
  grid-area: 1/1/2/2;


}

.white-square::before{
  background-color: rgb(242,242,242);
}

//Cube structure


.cube {
  width: $size;
  height: $size;
  position: relative;
  margin: 20vh auto;
  perspective: 1000px;
  transform-style: preserve-3d;
 
}
.cube-face {
  width: inherit;
  height: inherit;
  position: absolute;
  
}


.face-front {
  transform: translate3d(0, 0, $size/2);
}

.face-back {
  transform: rotateY(180deg) translate3d(0, 0, $size/2);
}

.face-left {
  transform: rotateY(-90deg) translate3d(0, 0, $size/2);
}

.face-right {
  transform: rotateY(90deg) translate3d(0, 0, $size/2);
}

.face-top {
  transform: rotateX(90deg) translate3d(0, 0, $size/2);
}

.face-bottom {
  transform: rotateX(-90deg) translate3d(0, 0, $size/2);
}